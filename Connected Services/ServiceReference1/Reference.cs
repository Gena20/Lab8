//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab_3.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Insert(string car_id, string obj_from_id, string obj_to_id, string date_from, string date_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertAsync(string car_id, string obj_from_id, string obj_to_id, string date_from, string date_to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetData(string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDataAsync(string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Delete(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSelectData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetSelectData(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSelectData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSelectDataAsync(string tableName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : Lab_3.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<Lab_3.ServiceReference1.WebService1Soap>, Lab_3.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Insert(string car_id, string obj_from_id, string obj_to_id, string date_from, string date_to) {
            return base.Channel.Insert(car_id, obj_from_id, obj_to_id, date_from, date_to);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAsync(string car_id, string obj_from_id, string obj_to_id, string date_from, string date_to) {
            return base.Channel.InsertAsync(car_id, obj_from_id, obj_to_id, date_from, date_to);
        }
        
        public System.Data.DataTable GetData(string dateFrom, string dateTo) {
            return base.Channel.GetData(dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDataAsync(string dateFrom, string dateTo) {
            return base.Channel.GetDataAsync(dateFrom, dateTo);
        }
        
        public void Delete(string id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public System.Data.DataTable GetSelectData(string tableName) {
            return base.Channel.GetSelectData(tableName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSelectDataAsync(string tableName) {
            return base.Channel.GetSelectDataAsync(tableName);
        }
    }
}
